import {useState,useEffect} from 'react'
import { MongoClient } from 'mongodb'
import Contributor from './updat'
import Addform from './Cform'
import Adminform, {LoginContext} from './Cpass'
import Head from 'next/head'





export default function Home(props) {
  const  navy_boys=props.meetups
  var totalCol=0;
  var totlen=navy_boys.length
  const [totfund, setTotalFund]=useState(false)
  const [totf, setTotalF]=useState(0)
  const [loggedin, setLoggedIn]=useState(false)
  const pdd=props.pwd
  console.log(pdd)
useEffect(() => {
  setTotalF(totalCol);
} );

  return (

    
<div>

<Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />

        <link rel={`"icon"`} href={`"/favicon.ico"`} />
      </Head>

    <div className="jumbotron">
    <h1 className="display-3 text-center text-white" style={{background:"grey", borderRadius:"30px"}}>{`"Volunteers do not necessarily have the time; they just have the heart."`}</h1>
    <h1 className="display-4">Hi All!</h1>
    <p className="lead">{`Xavier Ravi, Ex-PO, does require to undergo lower foot amputation procedure within this week and currently we understood that he is facing
     bit of financial constraints. In order to help him in this difficult times,  trying  to raise fund around Rs 50000  for his medical expenses and hope certainly would support him.
     So I request you all to extend your support with small act of kindness. Thank you!..`}
     </p>
    
   
    <p className="lead">
    $ send your kindnes to  Name: Veerabhadran S.       Bank: ICICI.                 Branch: Subramaniapuram, Madurai.                   A/c no: 601301508252.        IFSC: ICIC0006013
    </p>
  </div>  
 
  
<div className='row'>
<div className='col-sm-12 col-md-4'>
<div className='mb-3'>
<LoginContext.Provider value={{loggedin, setLoggedIn}}>
<Adminform  
  
/>
</LoginContext.Provider>
</div>

<Addform/>
</div>
 <div className=' col-sm-12 col-md-8'>
 {/* <h1> From All our well wishers</h1> */}
 <h2>Total Collected:Rs. {totf}</h2>
  
 
   

   {navy_boys.map((navyb,index)=>{
     //console.log(index)
    totalCol= navyb.verify===true?totalCol+Number(navyb.money):totalCol;
  
   
    return (<div className='d-inline-flex  m-2 justify-content-center'  key={navyb.id}>
    <LoginContext.Provider value={{loggedin, setLoggedIn}}>
    <Contributor
     
    name={navyb.name}
    money={navyb.money}
    number={navyb.snumber}
    verify={navyb.verify}
    id={navyb.id}
    description={navyb.description}
    pdd={loggedin}
    /> 
   </LoginContext.Provider>
    </div>)
    
   })}



   
      
   
   
  
 </div>
    
    
    </div>
    </div>
  )
  

 
}

export async function getServerSideProps(){

  const client = await MongoClient.connect('mongodb+srv://chandra68:mEQlqpTEI12rKjCE@cluster0.foyom.mongodb.net/xaviersave?retryWrites=true&w=majority');
  const db = client.db();
  const meetupsCollection=db.collection('xaviermemb')
  const meetups=await meetupsCollection.find().sort({"name":1}).toArray();
  //const tot=meetupsCollection.aggregate([ { $match: { verify: "true" } }, { $group: {_id: "$verify", TotalSum: { $sum: "$money" } } } ]).toString()
   client.close()


  return {
      props:{
          meetups: meetups.map((meetup,index)=>({
              key:index,
              name:meetup.name,
              snumber:meetup.snumber,
              money:meetup.money,
              description:meetup.description,
              verify:meetup.verify,
              id:meetup._id.toString()
          }
          
          
          ))


      }
     
  
  }
 
}